server:
  #port: 8771
  port: 8772
#--------------------------------------------------------------------------------------------------
eureka:
  instance:
    prefer-ip-address: true
    instance-id:  ${spring.cloud.client.ipAddress}:${server.port}
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 5

  client:
    #eureka client刷新本地缓存时间
    #默认30s
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: http://fungoEurekaAdmin:9140f6ad68d1e@172.17.18.228:8762/eureka/,http://fungoEurekaAdmin:9140f6ad68d1e@172.17.18.227:8761/eureka/


#--------------------------------------------------------------------------------------------------------
#----------------熔断配置
# 开启熔断机制
feign:
  hystrix:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE    #隔离策略，默认是Thread, 可选Thread｜Semaphore
        timeout:
          enabled: true
          thread:
            timeoutInMilliseconds: 60000  #命令执行超时时间，默认1000ms
        semaphore:
          maxConcurrentRequests: 2
      fallback:
        enabled: true
        isolation:
          semaphore:
            maxConcurrentRequests: 10
      circuitBreaker:
        enabled: true     #启用/禁用熔断机制
        forceOpen: false  #强制开启熔断
        forceClosed: false #强制关闭熔断
        requestVolumeThreshold: 4    #前提条件，一定时间内发起一定数量的请求。  也就是5秒钟内(这个5秒对应下面的滚动窗口长度)至少请求4次，熔断器才发挥起作用。  默认20
        errorThresholdPercentage: 50 #错误百分比。达到或超过这个百分比，熔断器打开。  比如：5秒内有4个请求，2个请求超时或者失败，就会自动开启熔断
        sleepWindowInMilliseconds: 5000 #10秒后，进入半打开状态（熔断开启，间隔一段时间后，会让一部分的命令去请求服务提供者，如果结果依旧是失败，则又会进入熔断状态，如果成功，就关闭熔断）。 默认5秒

ribbon:
  # 开启eureka与ribbon的集成
  eureka:
    enabled: true
  # 暂不开启熔断机制
  hystrix:
    enabled: false
  ConnectTimeout: 60000
  ReadTimeout: 150000
  #eureka客户端ribbon刷新时间
  #默认30s
  ServerListRefreshInterval: 1000
  # 是否开启重试
  OkToRetryOnAllOperations: true
  # 重试的时候实例切换次数
  MaxAutoRetriesNextServer: 3
  # 每个实例重试次数
  MaxAutoRetries: 2
#--------------------------------------------------------------------------------------------------
spring:
  cloud:
    inetutils:
      ignored-interfaces[0]: docker0
    client:
      #ipAddress: 172.17.18.227
      ipAddress: 172.17.18.228
  application:
    name: fungo-game-system

#--------------------------------------------------------------------------------------------------
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url:  jdbc:mysql://rm-bp145sizta1yg4585xo.mysql.rds.aliyuncs.com:3306/fungo_cloud_uat?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: fungo_uat
    password: b1dcfae36fa84Db88479efbd36b16e
    hikari:
      # 连接池标题
      pool-name: funGoApiHikariCP
      # 最小空闲连接数量
      minimum-idle: 5
      # 连接池最大连接数，默认是10
      maximum-pool-size: 15
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 600000
      # 控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1
      # 控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
  cache:
    ehcache:
      config: classpath:ehcache.xml
  #配置系统默认页面
  mvc:
    view:
      prefix: /
      suffix: .html

#--------------------------------------------------------------------------------------------------
  redis:
    sentinel:
      master: mymaster
      nodes: 39.105.18.214:26379,39.105.18.214:26380,39.105.18.214:26381
    database: 2
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 1
    #连接超时时间（毫秒）
    timeout: 3000
    password: fungoredisdev
    jackson:
      time-zone: GMT+8


#---------------------------------------mq----------------------------------------------
  rabbitmq:
      #外网
    host: 1811420479436984.mq-amqp.cn-hangzhou-a.aliyuncs.com
      #内网
      #host: 1811420479436984.mq-amqp.cn-hangzhou-a.aliyuncs.com
    port: 5672
    username: LTAIsW4qLBG6M3Vf
    password: EBQbTTZGhPptMw3tGJ1grmG4r6uD7l
    virtual-host: uat
    template:
      mandatory: true
    publisher-confirms: true
    publisher-returns: true

#---------------------------------------mq----------------------------------------------

  #热部署
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true

#--------------------------------------------------------------------------------------------------
mybatis-plus:
#  mapper-locations: classpath:mapping/*Mapper.xml
  global-config:
    id-type: 3
    field-strategy: 2
    db-column-underline: true
  configuration:
    map-underscore-to-camel-case: true


#--------------------------------------------------------------------------------------------------

aliyun.oss:
  endpoint: http://oss-cn-beijing.aliyuncs.com
  accessKeyId: LTAIsW4qLBG6M3Vf
  accessKeySecret: EBQbTTZGhPptMw3tGJ1grmG4r6uD7l
  bucket: output-mingbo
  imgDomain: https://output-mingbo.oss-cn-beijing.aliyuncs.com/
  regionId : cn-hangzhou

#--------------------------------------------------------------------------------------------------
#阿里云云视频点播服务鉴权秘钥
aliyun.vod:
  vodAccessKeyId: LTAILu78tcMMnOwk
  vodAccessKeySecret: uk03aCbczR2HcMRSzNOYp4zonjCPi2
  vodRegionId: cn-shanghai
  #阿里云视频点播分类id
  vodCateId: 1000013332

#--------------------------------------------------------------------------------------------------
#阿里云短信模板
aliyun.sms:
  template.code: SMS_158942300


#--------------------------------------------------------------------------------------------------
fungo:
  secretKey: asdflasjfdlajsdf
  mall:
    seckill:
      aesSecretKey: a612e866e73bf05f15aa9d98cff38016
  api:
    sKey: 021a0af9720f1c005f35c9618839cc3b
#--------------------------------------------------------------------------------------------------

#系统配置-集群编号
sys.config.fungo:
  cluster.index: 6

#--------------------------------------------------------------------------------------------------
#安全机制接口身份key
fungo.security:
  core.api:
    secret.key: 5a058f3f3f4de23234f536479156acde

#--------------------------------------------------------------------------------------------------


spring.aop.auto: true

#--------------------------------------------------------------------------------------------------

#sql控制台输出
logging:
  level:
    com.fungo.game.mall.mapper: DEBUG
    com.fungo.system.dao: DEBUG
#--------------------------------------------------------------------------------------------------
#数据迁移接口授权秘钥
fgoTransfAuth: adfe35cf834349b0b98b549292c1d65b
#--------------------------------------------------------------------------------------------------


#---------------MQ重发参数------------------
##message timeout (消息存放超过下面设置的时间才可以取出处理  时间单位：秒)
message:
    handle.duration: 180
  ##消息最多发送次数
    max.send.times: 5
  ## 消息间隔发送时间  时间单位:分
    send.1.time: 0
    send.2.time: 1
    send.3.time: 2
    send.4.time: 5
    send.5.time: 15

#--------------------------------------------------------------------------------------------------