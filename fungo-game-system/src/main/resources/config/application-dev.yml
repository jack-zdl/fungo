eureka:
  instance:
#    prefer-ip-address: true
    instance-id:  ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}} #  ${spring.cloud.client.ipAddress}:${server.port}
    lease-expiration-duration-in-seconds: 15
    lease-renewal-interval-in-seconds: 5
  client:
    serviceUrl:
      defaultZone:  http://127.0.0.1:8761/eureka/
server:
  port: 8771
spring:
  cloud:
    client:
      ipAddress:  127.0.0.1
  application:
    name: fungo-game-system
  datasource:

    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url:  jdbc:mysql://39.105.18.214:3306/fungo_system?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: root
    password: affdB440821920A9
    hikari:
      # 连接池标题
      pool-name: funGoApiHikariCP
      # 最小空闲连接数量
      minimum-idle: 5
      # 连接池最大连接数，默认是10
      maximum-pool-size: 15
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 600000
      # 控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1
      # 控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
  cache:
    ehcache:
      config: classpath:ehcache.xml
  #配置系统默认页面
  mvc:
    view:
      prefix: /
      suffix: .html

  redis:
    sentinel:
      master: mymaster
      nodes: 39.105.18.214:26379,39.105.18.214:26380,39.105.18.214:26381
    database: 1
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 1
    #连接超时时间（毫秒）
    timeout: 3000
    password: fungoredisdev
    jackson:
      time-zone: GMT+8
  session:
    store-type: redis
  zipkin:
    base-url: http://127.0.0.1:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1.0

#  rabbitmq:
#    host: 47.104.87.10
#    port: 5672
#    username: admin
#    password: admin
#    virtual-host: /
#    publisher-confirms: true  # 开启发送确认
#    publisher-returns: true   # 开启发送失败退回
#    listener:
#      direct:
#        acknowledge-mode: manual
#      simple:
#        acknowledge-mode: manual
#
#    templates:
#      retry:
#        enabled: true
#        initial-interval: 2s

#---------------------------------------mq----------------------------------------------
  rabbitmq:
      #外网
    host: 1811420479436984.mq-amqp.cn-hangzhou-a.aliyuncs.com
      #内网
      #host: 1811420479436984.mq-amqp.cn-hangzhou-a.aliyuncs.com
    port: 5672
    username: LTAIsW4qLBG6M3Vf
    password: EBQbTTZGhPptMw3tGJ1grmG4r6uD7l
    virtual-host: dev
    template:
      mandatory: true
    publisher-confirms: true
    publisher-returns: true
  #---------------------------------------mq----------------------------------------------


  #热部署
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
# stream 绑定一个接受消息的input管道
#  cloud:
#    stream:
#      bindings:
#        input:
#          destination: mydest
#          content-type: application/json
#      kafka:
#        binder:
#          zkNodes: 127.0.0.1
#          brokers: 127.0.0.1
#          input:
#            consumer:
#              resetOffsets: true
#      binders:
#        defaultRabbit:
#          type: rabbit
#          environment:
#            spring:
#              rabbitmq:
#              addresses: 47.104.87.10:5672
#              username: admin
#              password: admin
#              virtual-host: /
#                host: 47.104.87.10
#                port: 5672
#                username: admin
#                password: admin
#                virtual-host: /
#      bindings:  # 服务的整合处理
#        output:  # 这个名字是一个通道的名称，在分析具体源代码的时候会进行说明
#          destination: studyExchange   # 表示要使用的Exchange名称定义
#          content-type: application/json   # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
#          binder:  defaultRabbit # 设置要绑定的消息服务的具体设置

mybatis-plus:
#  mapper-locations: classpath:mapping/*Mapper.xml
  global-config:
    id-type: 3
    field-strategy: 2
    db-column-underline: true
  configuration:
    map-underscore-to-camel-case: true

#  type-aliases-package: com.fungo.system.entity
## 当post /refresh方式刷新配置 时 ，会有个安全限制，关掉就可以了
#security:
#  basic:
#    enabled: false
management:
#  security:
#    enabled: false
  endpoint:
    shutdown:
      enabled: true
    dbcheck:
      enabled: true
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"  # 暴露所有服务监控端口，也可以只暴露 hystrix.stream端口

turbine:
  #  1.被监控的服务应用没有配置 context-path 的情况下
  # 配置 Eureka 中的 serviceId 列表，指定要监控的服务
  app-config: FUNGO-GAME-GAMES,FUNGO-GAME-SYSTEM
  aggregator:
    cluster-config: default
  cluster-name-expression: new String("default")
#  combine-host-port: true

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: Semaphore    #隔离策略，默认是Thread, 可选Thread｜Semaphore
          thread:
            timeoutInMilliseconds: 40000  #命令执行超时时间，默认1000ms
ribbon:
  ConnectTimeout: 5000
  ReadTimeout: 15000



aliyun.oss:
  endpoint: http://oss-cn-beijing.aliyuncs.com
  accessKeyId: LTAIsW4qLBG6M3Vf
  accessKeySecret: EBQbTTZGhPptMw3tGJ1grmG4r6uD7l
  bucket: output-mingbo
  imgDomain: https://output-mingbo.oss-cn-beijing.aliyuncs.com/
  regionId : cn-hangzhou


#阿里云云视频点播服务鉴权秘钥
aliyun.vod:
  vodAccessKeyId: LTAILu78tcMMnOwk
  vodAccessKeySecret: uk03aCbczR2HcMRSzNOYp4zonjCPi2
  vodRegionId: cn-shanghai
  #阿里云视频点播分类id
  vodCateId: 1000013332

#阿里云短信模板
aliyun.sms:
  template.code: SMS_158942300

fungo:
  secretKey: asdflasjfdlajsdf
  mall:
    seckill:
      aesSecretKey: a612e866e73bf05f15aa9d98cff38016
  api:
    sKey: 021a0af9720f1c005f35c9618839cc3b


#系统配置-集群编号
sys.config.fungo:
  cluster.index: 1


#安全机制接口身份key
fungo.security:
  core.api:
    secret.key: 5a058f3f3f4de23234f536479156acde




spring.aop.auto: true
#spring.aop.proxy-target-class: true



#sql控制台输出
logging:
  level:
    com.fungo.game.mall.mapper: DEBUG
    com.fungo.system.dao: DEBUG

#数据迁移接口授权秘钥
fgoTransfAuth: adfe35cf834349b0b98b549292c1d65b

#系统监控配置
javamelody:
  enabled: true
  excluded-datasources: secretSource,topSecretSource
  spring-monitoring-enabled: true
  advisor-auto-proxy-creator-enabled: false
  scheduled-monitoring-enabled: true
  init-parameters:
    log: true
    # to exclude images, css, fonts and js urls from the monitoring:
    #url-exclude-pattern: (/webjars/.*|/css/.*|/images/.*|/fonts/.*|/js/.*)
    # to aggregate digits in http requests:
    #http-transform-pattern: \d+
    # to add basic auth:
    authorized-users: admin:pwd
    # to change the default storage directory:
    storage-directory: /tmp/javamelody_node8088
    # to change the default "/monitoring" path:
    #monitoring-path: /admin/performance



#---------------MQ重发参数------------------
##message timeout (消息存放超过下面设置的时间才可以取出处理  时间单位：秒)
message:
    handle.duration: 180
  ##消息最多发送次数
    max.send.times: 5
  ## 消息间隔发送时间  时间单位:分
    send.1.time: 0
    send.2.time: 1
    send.3.time: 2
    send.4.time: 5
    send.5.time: 15