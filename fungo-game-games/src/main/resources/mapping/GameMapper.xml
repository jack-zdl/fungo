<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fungo.games.dao.GameDao">

    <!-- 通用查询映射结果 -->
    <!-- 	<resultMap id="BaseResultMap" type="com.fungo.game.entity.Game">
            <id column="id" property="id" />
            <result column="recommend_num" property="recommendNum" />
            <result column="tags" property="tags" />
            <result column="video" property="video" />
            <result column="update_log" property="updateLog" />
            <result column="unrecommend_num" property="unrecommendNum" />
            <result column="apk" property="apk" />
            <result column="download_num" property="downloadNum" />
            <result column="itunes_id" property="itunesId" />
            <result column="compatibility" property="compatibility" />
            <result column="version_child" property="versionChild" />
            <result column="images" property="images" />
            <result column="game_size" property="gameSize" />
            <result column="release_image" property="releaseImage" />
            <result column="name" property="name" />
            <result column="cover_image" property="coverImage" />
            <result column="state" property="state" />
            <result column="image_ratio" property="imageRatio" />
            <result column="icon" property="icon" />
            <result column="edited_at" property="editedAt" />
            <result column="community_id" property="communityId" />
            <result column="member_id" property="memberId" />
            <result column="origin" property="origin" />
            <result column="intro" property="intro" />
            <result column="developer" property="developer" />
            <result column="version_main" property="versionMain" />
            <result column="isbn_id" property="isbnId" />
            <result column="detail" property="detail" />
            <result column="created_at" property="createdAt" />
            <result column="updated_at" property="updatedAt" />
            <result column="created_by" property="createdBy" />
            <result column="updated_by" property="updatedBy" />
            <result column="ios_state" property="iosState" />
            <result column="android_state" property="androidState" />
            <result column="developer_id" property="developerId" />
            <result column="test_number" property="testNumber" />
            <result column="tset_date" property="tsetDate" />
            <result column="isbn_image" property="isbnImage" />
            <result column="copyright_id" property="copyrightId" />
            <result column="copyright_image" property="copyrightImage" />
            <result column="credentials" property="credentials" />
            <result column="issue_id" property="issueId" />
        </resultMap>
     -->

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.fungo.games.entity.Game">
        <id column="id" property="id"/>
        <result column="tags" property="tags"/>
        <result column="video" property="video"/>
        <result column="update_log" property="updateLog"/>
        <result column="apk" property="apk"/>
        <result column="download_num" property="downloadNum"/>
        <result column="itunes_id" property="itunesId"/>
        <result column="compatibility" property="compatibility"/>
        <result column="version_child" property="versionChild"/>
        <result column="images" property="images"/>
        <result column="game_size" property="gameSize"/>
        <result column="release_image" property="releaseImage"/>
        <result column="name" property="name"/>
        <result column="cover_image" property="coverImage"/>
        <result column="image_ratio" property="imageRatio"/>
        <result column="icon" property="icon"/>
        <result column="edited_at" property="editedAt"/>
        <result column="community_id" property="communityId"/>
        <result column="member_id" property="memberId"/>
        <result column="origin" property="origin"/>
        <result column="recommend_num" property="recommendNum"/>
        <result column="unrecommend_num" property="unrecommendNum"/>
        <result column="state" property="state"/>
        <result column="intro" property="intro"/>
        <result column="fungo_talk" property="fungoTalk"/>
        <result column="developer" property="developer"/>
        <result column="version_main" property="versionMain"/>
        <result column="isbn_id" property="isbnId"/>
        <result column="detail" property="detail"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="ios_state" property="iosState"/>
        <result column="android_state" property="androidState"/>
        <result column="developer_id" property="developerId"/>
        <result column="test_number" property="testNumber"/>
        <result column="tset_date" property="tsetDate"/>
        <result column="isbn_image" property="isbnImage"/>
        <result column="copyright_id" property="copyrightId"/>
        <result column="copyright_image" property="copyrightImage"/>
        <result column="credentials" property="credentials"/>
        <result column="issue_id" property="issueId"/>
        <result column="android_package_name" property="androidPackageName"/>
        <!--2019-05-28 补充遗漏的字段 lyc-->
        <result column="comment_num" property="commentNum"/>
        <result column="boom_download_num" property="boomDownloadNum"/>
         <result column="game_idt_sn" jdbcType="BIGINT" property="gameIdtSn" />
        <result column="tab_game_id" jdbcType="VARCHAR" property="tabGameId" />
        <result column="google_game_id" jdbcType="VARCHAR" property="googleGameId" />
        <result column="video_url_latest" jdbcType="BIT" property="videoUrlLatest" />
        <result column="cost_free" jdbcType="BIT" property="costFree" />
        <result column="company" jdbcType="VARCHAR" property="company" />
        <result column="publisher" jdbcType="VARCHAR" property="publisher" />
        <result column="android_status_desc" jdbcType="VARCHAR" property="androidStatusDesc" />
        <result column="ios_status_desc" jdbcType="VARCHAR" property="iosStatusDesc" />
        <result column="google_deputy_name" jdbcType="VARCHAR" property="googleDeputyName" />
        <result column="can_fast" jdbcType="TINYINT" property="canFast" />
        <result column="previous_week_download_num" jdbcType="BIGINT" property="previousWeekDownloadNum" />
        <result column="week_download_num" jdbcType="BIGINT" property="weekDownloadNum" />
        <result column="score" jdbcType="DOUBLE" property="score" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, tags, video, update_log AS updateLog, apk, download_num AS downloadNum, itunes_id AS itunesId, compatibility, version_child AS versionChild, images, game_size AS gameSize, release_image AS releaseImage, name, cover_image AS coverImage, image_ratio AS imageRatio, icon, edited_at AS editedAt, community_id AS communityId, member_id AS memberId, origin, recommend_num AS recommendNum, unrecommend_num AS unrecommendNum, state, intro, developer, version_main AS versionMain, isbn_id AS isbnId, detail, created_at AS createdAt, updated_at AS updatedAt, created_by AS createdBy, updated_by AS updatedBy, ios_state AS iosState, android_state AS androidState, developer_id AS developerId, test_number AS testNumber, tset_date AS tsetDate, isbn_image AS isbnImage, copyright_id AS copyrightId, copyright_image AS copyrightImage, credentials, issue_id AS issueId, android_package_name AS androidPackageName
    </sql>


    <sql id="Base_Game_List">
        id, tags, video, update_log, fungo_talk, apk, download_num, itunes_id, compatibility, version_child, images, game_size, release_image,
        name, cover_image, image_ratio, icon, edited_at, community_id, member_id, origin, recommend_num, unrecommend_num, state, intro, developer,
        version_main, isbn_id, detail, updated_at, updated_by, ios_state, android_state, developer_id, test_number, tset_date, isbn_image, copyright_id, copyright_image,
        credentials, issue_id, android_package_name, comment_num, boom_download_num, game_idt_sn, tab_game_id, google_game_id, video_url_latest, cost_free, company,
        publisher, android_status_desc, ios_status_desc, google_deputy_name, can_fast, previous_week_download_num, week_download_num, score
    </sql>


    <select id="listGame" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from t_game where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="getGameList"  parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Game_List"></include>
        from t_game where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>

            order by
            field(
            id,
        <foreach collection="ids" item="id"  separator=",">
                #{id}
            </foreach>
            )
    </select>

    <update id="updateBatchState">
        update t_game set state=#{state} where id in
        <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateTags">
  	update t_game set tags=#{tags} where id=#{gameId}
  </update>

  <!-- 获取游戏评分 -->
  <select id="getRateData" resultType="java.util.HashMap" parameterType="String">
	<![CDATA[ 
		select
		    e.game_id as gameId,
			ROUND(AVG(rating),1) as avgRating,
			ROUND(AVG(trait1),1) as avgTrait1,
			ROUND(AVG(trait2),1) as avgTrait2,
			ROUND(AVG(trait3),1) as avgTrait3,
			ROUND(AVG(trait4),1) as avgTrait4,
			ROUND(AVG(trait5),1) as avgTrait5
		from t_game_evaluation e where  
		e.game_id = #{gameId} and e.state != -1


        ]]>
	</select>
    <!--getRateData1  平均分20190521复制-->
    <select id="getRateData1" resultType="java.util.HashMap" parameterType="String">
	<![CDATA[
		select
			ROUND(AVG(rating),1) as avgRating,
			ROUND(AVG(trait1),1) as avgTrait1,
			ROUND(AVG(trait2),1) as avgTrait2,
			ROUND(AVG(trait3),1) as avgTrait3,
			ROUND(AVG(trait4),1) as avgTrait4,
			ROUND(AVG(trait5),1) as avgTrait5
		from t_game_evaluation e where
		e.game_id = #{gameId} and e.state != -1


        ]]>
	</select>

	
	<!-- 获取游戏评分占比 -->
	<select id="getPercentData" resultType="java.util.HashMap" parameterType="String">
	<![CDATA[ 
		SELECT
			MAX(CASE b.rating WHEN 1 THEN percentage ELSE 0 END ) '1',
			MAX(CASE b.rating WHEN 2 THEN percentage ELSE 0 END ) '2', 
			MAX(CASE b.rating WHEN 3 THEN percentage ELSE 0 END ) '3', 
			MAX(CASE b.rating WHEN 4 THEN percentage ELSE 0 END ) '4', 
			MAX(CASE b.rating WHEN 5 THEN percentage ELSE 0 END ) '5', 
			MAX(CASE b.rating WHEN 6 THEN percentage ELSE 0 END ) '6', 
			MAX(CASE b.rating WHEN 7 THEN percentage ELSE 0 END ) '7', 
			MAX(CASE b.rating WHEN 8 THEN percentage ELSE 0 END ) '8', 
			MAX(CASE b.rating WHEN 9 THEN percentage ELSE 0 END ) '9', 
			MAX(CASE b.rating WHEN 10 THEN percentage ELSE 0 END ) '10'
		FROM 
			(select COUNT(*) as total,rating as rating,ROUND(COUNT(*) * 100/(select COUNT(*) from t_game_evaluation where game_id = #{gameId} and state != -1),1) 
			as percentage from t_game_evaluation where game_id = #{gameId} and state != -1 GROUP BY rating) as b


        ]]>
	</select>

	
	<!-- 获取一天内访问数前十的游戏 -->
	<select id="getHotValue" resultType="com.game.common.bean.HotValue" parameterType="String">

		select b.biz_id as gameId,b.total as totalCount,g.name as gameName 
		from
		(SELECT biz_id,count(*) as total from t_bas_log where path like '%game%' and biz_id is not null and TO_DAYS(CURDATE())-TO_DAYS(created_at) = 1 GROUP BY biz_id) 
		as b,t_game as g where b.biz_id = g.Id ORDER BY b.total DESC limit 10;
	</select>

	
	<!-- 获取用户最近评论的游戏 -->
	<select id="getRecentCommentedGames" resultType="java.util.HashMap" parameterType="String">
		select g.id as game_id,g.name,g.icon,g.tags,g.community_id,g.comment_num,e.content,e.updated_at 
		from t_game g,t_game_evaluation e 
		WHERE e.game_id = g.id AND e.member_id = #{memberId}   GROUP BY game_id
		ORDER BY e.updated_at DESC
	</select>

    <!--获取上周下载数+评论数 排名前10位的游戏 -->
    <select id="getGamesByDownload" resultType="java.util.HashMap" parameterType="String">
		select  SUM(g.download_num+g.comment_num) as number, g.id as game_id,g.name,g.icon,g.tags,g.community_id,g.comment_num
		from t_game g
		GROUP BY id  ORDER BY number desc;
	</select>


    <select id="query2018GameDownloadCount" resultType="java.util.HashMap">
		SELECT
		input_data ,created_at
		FROM
		t_bas_log
		WHERE
		path = '/api/action/download'
		AND ( date_format( created_at, '%Y-%m-%d' )
		<![CDATA[  >= ]]>
		'2018-01-01' AND date_format( created_at, '%Y-%m-%d' ) <![CDATA[  <=   ]]> '2018-12-31' )
		ORDER BY
		created_at DESC
	</select>


    <!--updateCountor 根据表名(动态)修改-->
    <update id="updateCountor" parameterType="java.util.Map">
        update ${tableName} set
        <if test="type == 'add'">
            ${fieldName}=${fieldName}+1
        </if>
        <if test="type == 'sub'">
            ${fieldName}=${fieldName}-1
        </if>
        where id = #{id}
    </update>
    <!--getMemberIdByTargetId 被点赞用户的id-->
    <select id="getMemberIdByTargetId" resultType="string" parameterType="java.util.Map" >
		select member_id from ${tableName} where id=#{id}
	</select>

    <select id="getGameByEvaluateId" resultType="com.fungo.games.entity.Game">
        SELECT  * FROM  t_game tg LEFT JOIN t_game_evaluation tge ON tg.id = tge.game_id WHERE  tge.id = #{evaluateId}
    </select>

    <select id="countGameByTags" parameterType="com.game.common.dto.game.TagGameDto" resultType="java.lang.Integer">
        select count(*)
        from t_game g
        <if test="tagIds !=null">
        inner join
        (
        select game_id from t_game_tag
            WHERE tag_id
            in (${tagIds})
            GROUP BY game_id
            HAVING count(game_id) >= #{size}
        ) t
        on g.id = t.game_id
        </if>
      where g.state = 0
    </select>

    <select id="listGameByTags" parameterType="com.game.common.dto.game.TagGameDto" resultMap="BaseResultMap">
        select  g.id,g.version_child,g.apk,g.tags,g.game_size,g.name,g.icon,g.origin,g.version_main,g.ios_state,g.android_state,g.android_package_name,g.android_status_desc,g.ios_status_desc
        ,g.can_fast,g.score
        from t_game g
        <if test="tagIds !=null">
            inner join
            (
            select game_id from t_game_tag
            WHERE tag_id
            in (${tagIds})
            GROUP BY game_id
            HAVING count(game_id) >= #{size}
            ) t
            on g.id = t.game_id
        </if>
        where g.state = 0
        order by
        <if test="sortType == 0 ">
            g.previous_week_download_num desc
        </if>
        <if test="sortType == 1 ">
            g.score desc
        </if>
        <if test="sortType == 2 ">
            g.updated_at desc
        </if>
        limit #{offset},#{limit}
    </select>

    <select id="countBangBySortType" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from t_game tg inner join t_game_list tl
        on
        tg.id = tl.game_id
       <!-- <if test="sortType lt 10">
            tg.tab_game_id = tl.third_game_id
        </if>
        <if test="sortType gte 10">
            tg.google_game_id = tl.third_game_id
        </if>-->
        where tl.sort_type = #{sortType} and tl.status = 1 and tg.state = 0
    </select>

    <select id="listBangBySortType" parameterType="com.game.common.dto.game.BangGameDto" resultMap="BaseResultMap">
        select
        g.id,g.version_child,g.apk,g.tags,g.game_size,g.name,g.icon,g.origin,g.version_main,g.ios_state,g.android_state,g.android_package_name,g.android_status_desc,g.ios_status_desc
        ,g.can_fast,g.score
        from t_game g inner join t_game_list tl
        on
        g.id = tl.game_id
       <!-- <if test="sortType lt 10">
            g.tab_game_id = tl.third_game_id
        </if>
        <if test="sortType gte 10">
            g.google_game_id = tl.third_game_id
        </if>-->
        where tl.sort_type = #{sortType} and tl.status = 1 and g.state = 0
        order by tl.sort
        limit #{offset},#{limit}
    </select>


    <update id="addDownLoadNum" >
      update t_game set download_num = download_num+1 ,week_download_num = week_download_num +1,boom_download_num = #{boomDownloadNum} WHERE id = #{gameId};
    </update>


    <select id="getGmaePage" resultType="com.fungo.games.entity.Game" >
        select
        <include refid="Base_Column_List"></include>
        from  t_game
        where  state = 0  and ( name LIKE  concat(concat('%',#{keyword}),'%')OR google_deputy_name LIKE concat(concat('%',#{keyword}),'%') OR intro LIKE  concat(concat('%',#{keyword}),'%') )
    </select>

</mapper>
